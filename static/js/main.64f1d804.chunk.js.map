{"version":3,"sources":["assets/images/sample_image.jpg","components/speedgauge/SpeedGauge.js","App.js","utilities/utilities.js","reportWebVitals.js","index.js"],"names":["SpeedGauge","speed","className","style","transform","degFromSpeed","App","socket","socketIOClient","transport","useState","undefined","setSpeed","loading","setLoading","stream","ss","createStream","fileLength","useEffect","on","size","timestamp","time","Date","now","console","log","uploadSpeed","toFixed","onClick","src","callback","img","Image","crossOrigin","onload","dataURL","canvas","document","createElement","ctx","getContext","height","this","naturalHeight","width","naturalWidth","drawImage","toDataURL","encodeImage","sampleData","data","name","content","emit","res","err","chunk","downloadSpeed","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uMAAe,MAA0B,yC,iBCiD1BA,EAjDI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAQpB,OACE,qBAAKC,UAAU,uDAAf,SACE,sBAAKA,UAAU,uDAAf,UACE,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,qBAEjB,qBAAKA,UAAU,cAAcC,MAAO,CAAEC,UAAU,UAAD,OAtBlC,SAACH,GAGpB,OADWA,EAAQ,IAAO,IAoBuCI,CAAaJ,GAAzB,WAC/C,qBAAKC,UAAU,gCAEjB,sBAAKA,UAAU,sDAAf,UACE,qBAAKA,UAAU,SAAf,eACA,qBAAKA,UAAU,SAAf,gBACA,qBAAKA,UAAU,SAAf,gBACA,qBAAKA,UAAU,SAAf,gBACA,qBAAKA,UAAU,SAAf,gBACA,qBAAKA,UAAU,SAAf,gBACA,qBAAKA,UAAU,SAAf,gBACA,qBAAKA,UAAU,SAAf,gBACA,qBAAKA,UAAU,SAAf,gBACA,qBAAKA,UAAU,SAAf,gBACA,qBAAKA,UAAU,SAAf,iBACA,qBAAKA,UAAU,SAAf,iBACA,qBAAKA,UAAU,SAAf,iBACA,qBAAKA,UAAU,SAAf,iBACA,qBAAKA,UAAU,SAAf,0B,8BC4DKI,MA7Ff,WAME,IAAMC,EAASC,IALA,sCAKyB,CAAEC,UAAW,CAAC,eANzC,EAOaC,wBAASC,GAPtB,mBAONV,EAPM,KAOCW,EAPD,OAQiBF,oBAAS,GAR1B,mBAQNG,EARM,KAQGC,EARH,KASTC,EAASC,IAAGC,eACZC,EAAa,EAmDjB,OAjDAC,qBAAU,WACRH,IAAGT,GAAQa,GAAG,cAAc,SAAUC,EAAMC,GAE1C,IAAIC,EAAkC,MAA1BC,KAAKC,MAAQH,GACzBI,QAAQC,IAAR,WAAgBN,EAAhB,6BAAyCE,EAAzC,cACA,IAAIK,GAAgBP,EAAQE,GAAMM,QAAQ,GAC1Cf,GAAW,GACXF,EAASgB,QAGV,IAwCD,sBAAK1B,UAAU,0CAAf,UACE,oBAAIA,UAAU,+BAAd,oCACA,sBAAKA,UAAU,8DAAf,UACE,cAAC,EAAD,CAAYD,MAAOA,SAEPU,IAAVV,EACGY,EAGC,mBAAGX,UAAU,6BAAb,qBAFA,mBAAGA,UAAU,6BAAb,mBAA8CD,EAA9C,WAIF,mBAAGC,UAAU,6BAAb,+CAIHW,EAQC,qBAAKX,UAAU,+DAAf,SACE,qBAAKA,UAAU,oFARjB,wBACEA,UAAU,2JACV4B,QAxDY,WACpBhB,GAAW,GClCR,SAAqBiB,EAAKC,GAC/B,IAAIC,EAAM,IAAIC,MACdD,EAAIE,YAAc,YAClBF,EAAIF,IAAMA,EACVE,EAAIG,OAAS,WACX,IAEIC,EAFAC,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MAE5BJ,EAAOK,OAASC,KAAKC,cACrBP,EAAOQ,MAAQF,KAAKG,aACpBN,EAAIO,UAAUJ,KAAM,EAAG,GACvBP,EAAUC,EAAOW,UAAU,aAAc,GACzCjB,EAASK,IDuBTa,CACEC,GACA,SAAUlB,GACR,IAAImB,EAAO,CACTC,KAAM,cACNC,QAASrB,EACTX,UAAWE,KAAKC,OAElBT,IAAGT,GAAQgD,KAAK,OAAQxC,EAAQqC,GAAM,SAAUI,EAAKC,GAC/CA,EACF/B,QAAQC,IAAI,UAAY8B,IAGxBvC,EAAasC,EAAInC,KAEjBN,EAAOK,GAAG,QAAQ,SAAUsC,GAG1B,IAEIC,IAHJzC,GAAgBwC,EAAME,OAAN,QAAgC,GACpB/B,QAAQ,IACM,MAA9BL,KAAKC,MAAQ+B,EAAIlC,aACaO,QAAQ,GAClDjB,EAAS+C,MAIX5C,EAAOK,GAAG,OAAO,WACfM,QAAQC,IAAI,kBACZb,GAAW,cAyBf,4BE3EK+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASkC,eAAe,SAM1BZ,K","file":"static/js/main.64f1d804.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sample_image.0c37a65c.jpg\";","const SpeedGauge = ({ speed }) => {\r\n\r\n  const degFromSpeed = (speed) => {\r\n    //Max speed on gauge is 140;\r\n    let deg = (speed / 140) * 180;\r\n    return deg;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center mt-10 mb-5 relative\">\r\n      <div className=\"graph relative w-64 flex justify-center items-center\">\r\n        <div className=\"gauge\">\r\n          <div className=\"slice-colors\">\r\n            <div className=\"st slice-item\"></div>\r\n            <div className=\"st slice-item\"></div>\r\n            <div className=\"st slice-item\"></div>\r\n            <div className=\"st slice-item\"></div>\r\n            <div className=\"st slice-item\"></div>\r\n            <div className=\"st slice-item\"></div>\r\n            <div className=\"st slice-item\"></div>\r\n            <div className=\"st slice-item\"></div>\r\n            <div className=\"st slice-item\"></div>\r\n            <div className=\"st slice-item\"></div>\r\n          </div>\r\n          <div className=\"needle z-10\" style={{ transform: `rotate(${degFromSpeed(speed)}deg)` }}></div>\r\n          <div className=\"gauge-center bg-gray-700\"></div>\r\n        </div>\r\n        <div className=\"legends text-red-700 font-bold z-10 hidden sm:block\">\r\n          <div className=\"legend\">0</div>\r\n          <div className=\"legend\">10</div>\r\n          <div className=\"legend\">20</div>\r\n          <div className=\"legend\">30</div>\r\n          <div className=\"legend\">40</div>\r\n          <div className=\"legend\">50</div>\r\n          <div className=\"legend\">60</div>\r\n          <div className=\"legend\">70</div>\r\n          <div className=\"legend\">80</div>\r\n          <div className=\"legend\">90</div>\r\n          <div className=\"legend\">100</div>\r\n          <div className=\"legend\">110</div>\r\n          <div className=\"legend\">120</div>\r\n          <div className=\"legend\">130</div>\r\n          <div className=\"legend\">140</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SpeedGauge;","import React, { useEffect, useState } from 'react';\nimport sampleData from './assets/images/sample_image.jpg';\nimport socketIOClient from \"socket.io-client\";\nimport SpeedGauge from './components/speedgauge/SpeedGauge';\nimport ss from \"socket.io-stream\";\nimport { encodeImage } from './utilities/utilities';\nimport './App.css';\nimport './tailwind.output.css';\n\nfunction App() {\n  var ENDPOINT = \"https://speedchecked.herokuapp.com/\";\n  if (process.env.NODE_ENV === \"development\") {\n    ENDPOINT = \"http://localhost:5000/\";\n  }\n\n  const socket = socketIOClient(ENDPOINT, { transport: ['websocket'] });\n  const [speed, setSpeed] = useState(undefined);\n  const [loading, setLoading] = useState(false);\n  var stream = ss.createStream();\n  var fileLength = 0;\n\n  useEffect(() => {\n    ss(socket).on('dataUpload', function (size, timestamp) {\n      //time in seconds\n      var time = (Date.now() - timestamp) * 0.001;\n      console.log(` ${size} Mb downloaded in ${time} seconds `);\n      var uploadSpeed = ((size) / time).toFixed(2);\n      setLoading(false);\n      setSpeed(uploadSpeed);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const initSpeedTest = () => {\n    setLoading(true);\n    encodeImage(\n      sampleData,\n      function (img) {\n        let data = {\n          name: \"sample_data\",\n          content: img,\n          timestamp: Date.now()\n        }\n        ss(socket).emit('file', stream, data, function (res, err) {\n          if (err) {\n            console.log(\"Error: \" + err);\n          } else {\n\n            fileLength = res.size;\n            // Received data\n            stream.on('data', function (chunk) {\n              //Adding chunks in megabits size;\n              fileLength += ((chunk.length / (1024 * 1024)) * 8);\n              let fileMbSize = fileLength.toFixed(2);\n              let time = (Date.now() - res.timestamp) * 0.001;\n              let downloadSpeed = ((fileMbSize) / time).toFixed(2);\n              setSpeed(downloadSpeed);\n            });\n\n            // No more data\n            stream.on('end', function () {\n              console.log(\"End of stream.\")\n              setLoading(false);\n            });\n          }\n        });\n      }\n    );\n  }\n\n  return (\n    <div className=\"App h-screen w-screen bg-gray-700 pt-16\">\n      <h1 className=\"text-white text-xl font-bold\">Internet Speed Checker</h1>\n      <div className=\"h-screen/2 w-full flex flex-col justify-center align-center\">\n        <SpeedGauge speed={speed} />\n        {\n          speed !== undefined ?\n            !loading ?\n              <p className=\"text-red-700 font-bold p-2\">{`${speed} Mbps`}</p>\n              :\n              <p className=\"text-red-700 font-bold p-2\">-- Mbps</p>\n            :\n            <p className=\"text-red-700 font-bold p-2\">Click below to test your speed</p>\n        }\n      </div>\n      {\n        !loading ?\n          <button\n            className=\"z-10 bg-transparent hover:bg-red-700 text-white font-semibold hover:text-white mt-8 mb-40 py-2 px-4 border border-white hover:border-transparent rounded\"\n            onClick={initSpeedTest}\n          >\n            Test speed\n          </button>\n          :\n          <div className=\"w-full flex justify-center items-center mt-8 mb-40 py-2 px-4\">\n            <div className=\"loader ease-linear rounded-full border-2 border-t-2 border-gray-200 h-10 w-10\"></div>\n          </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","export function encodeImage(src, callback) {\r\n  var img = new Image();\r\n  img.crossOrigin = 'Anonymous';\r\n  img.src = src;\r\n  img.onload = function() {\r\n    var canvas = document.createElement('CANVAS');\r\n    var ctx = canvas.getContext('2d');\r\n    var dataURL;\r\n    canvas.height = this.naturalHeight;\r\n    canvas.width = this.naturalWidth;\r\n    ctx.drawImage(this, 0, 0);\r\n    dataURL = canvas.toDataURL('image/jpeg', 1);\r\n    callback(dataURL);\r\n  };\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './tailwind.output.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}